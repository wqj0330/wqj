<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:cloud="http://schema.cloudfoundry.org/spring" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://schema.cloudfoundry.org/spring
        http://schema.cloudfoundry.org/spring/cloudfoundry-spring.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.2.xsd"
	default-lazy-init="false">
	
    
<!-- 使用注解来构造IoC容器  用注解来向Spring容器注册Bean。需要在applicationContext.xml中注册<context:component-scan base-package=”pagkage1[,pagkage2,…,pagkageN]”/> -->
<!-- 表明cn.gacl.java包及其子包中，如果某个类的头上带有特定的注解【@Component/@Repository/@Service/@Controller】，就会将这个对象作为Bean注册进Spring容器。 -->
  	<context:component-scan base-package="me.anchora.inpaasmgr" />  
	<!-- 默认的注解映射的支持 -->
	<mvc:annotation-driven/>
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/"></property> <!--页面文件的路径，在根目录下 --><!-- 根目录src//main/webapp -->
	</bean>
	<!-- aop -->
	<bean id="controllerLogger" class="me.anchora.inpaasmgr.aop.ControllerLogger"/>
	<aop:config>
        <aop:aspect id="ControllerAspect" ref="controllerLogger">
            <aop:pointcut id="controller" expression="execution(* *..controller.*.*(..))" /> <!-- 所有controller方法 -->
            <aop:before pointcut-ref="controller" method="doBefore"/>
            <aop:after pointcut-ref="controller" method="doAfter"/>
            <aop:around pointcut-ref="controller" method="doAround"/>
            <aop:after-throwing pointcut-ref="controller" method="doThrowing" throwing="ex"/>
        </aop:aspect>
    </aop:config>
	<bean id="serviceLogger" class="me.anchora.inpaasmgr.aop.ServiceLogger"/>
	<aop:config>
        <aop:aspect id="serviceAspect" ref="serviceLogger">
            <aop:pointcut id="service" expression="execution(* *..service.*.*(..))" /> <!-- 所有service方法 -->
            <aop:before pointcut-ref="service" method="doBefore"/>
            <aop:after pointcut-ref="service" method="doAfter"/>
            <aop:around pointcut-ref="service" method="doAround"/>
            <aop:after-throwing pointcut-ref="service" method="doThrowing" throwing="ex"/>
        </aop:aspect>
    </aop:config>
</beans>